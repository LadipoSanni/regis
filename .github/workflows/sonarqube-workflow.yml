name : SonarQube code Analysis

on :
  push :
    branches :
      - main
  pull_request :
    branches :
      - main

jobs :
  sonarqube :
    name : SonarQube Scan
    runs-on : ubuntu-latest

    steps :
      - name : Checkout Repository
        uses : actions/checkout@v3

      - name : Set Up JDK 11
        uses : actions/setup-java@v3
        with :
          java-version : '11'


      - name : Cache SonarQube Packages
        uses : actions/cache@v3
        with :
          path : ~/.sonar/cache
          key : ${{ runner.os }}-sonar-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', '**/pom.xml') }}
          restore-keys : |
            ${{ runner.os }}-sonar-

      - name : Install SonarQube
        run : |
          curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip -o sonar-scanner.zip
                  unzip sonar-scanner.zip -d $HOME/.sonar-scanner
                  export PATH=$PATH:$HOME/.sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin

      - name : Run SonarQube Scan
        run : |
          sonar-scanner \
                    -Dsonar.projectKey=your_project_key \
                    -Dsonar.sources=. \
                    -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} \
                    -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: Set up JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#      - name: Cache SonarQube packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v1
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=regis -Dsonar.projectName='regis' make me one working workflow out of these
